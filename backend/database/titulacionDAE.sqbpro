<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="titulacion.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2925"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="usuarios" custom_title="0" dock_id="4" table="4,8:mainusuarios"/><dock_state state="000000ff00000000fd00000001000000020000024800000215fc0100000004fb000000160064006f0063006b00420072006f00770073006500310100000000000002480000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000000002480000000000000000fb000000160064006f0063006b00420072006f00770073006500330100000000000002480000000000000000fb000000160064006f0063006b00420072006f00770073006500340100000000000002480000011e00ffffff000002480000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="as" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="41"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="usuarios" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="67"/><column index="2" value="101"/><column index="3" value="50"/><column index="4" value="72"/><column index="5" value="47"/><column index="6" value="67"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- Tabla Usuarios
CREATE TABLE usuarios (
  id_usuario INTEGER PRIMARY KEY AUTOINCREMENT,
  nombre_usuario TEXT NOT NULL,
  usuario TEXT NOT NULL,
  contrasena TEXT NOT NULL,
  rol TEXT NOT NULL,
  foto_perfil TEXT
);

-- Tabla Modalidad Titulación
CREATE TABLE modalidad_titulacion (
  id_modalidad INTEGER PRIMARY KEY AUTOINCREMENT,
  modalidad_titulacion TEXT NOT NULL
);

-- Tabla Programa Educativo
CREATE TABLE programa_educativo (
  id_programa_educativo INTEGER PRIMARY KEY AUTOINCREMENT,
  programa_educativo TEXT NOT NULL,
  titulo_otorga TEXT NOT NULL
);

-- Tabla Bachillerato
CREATE TABLE bachillerato (
  id_bach INTEGER PRIMARY KEY AUTOINCREMENT,
  nombre_bach TEXT NOT NULL
);

-- Tabla Requisitos
CREATE TABLE requisitos (
  res_EGEL BOOLEAN NOT NULL,
  fecha_EGEL DATE NOT NULL,
  servicio_social BOOLEAN NOT NULL,
  practicas_profesionales BOOLEAN NOT NULL,
  res_ingles BOOLEAN NOT NULL,
  fecha_ingles DATE NOT NULL,
  biblioteca DATE NOT NULL,
  CEDAI BOOLEAN NOT NULL,
  laboratorio BOOLEAN NOT NULL,
  num_Cuenta INTEGER NOT NULL,
  PRIMARY KEY (num_Cuenta),
  FOREIGN KEY (num_Cuenta) REFERENCES datos_estudiantes_uni(num_Cuenta)
);

-- Tabla Requisitos Modalidad
CREATE TABLE requisitos_modalidad (
  id_requisito_modalidad INTEGER PRIMARY KEY AUTOINCREMENT,
  id_modalidad INTEGER NOT NULL,
  descripcion TEXT NOT NULL,
  FOREIGN KEY (id_modalidad) REFERENCES modalidad_titulacion(id_modalidad)
);

-- Tabla Requisitos Programa
CREATE TABLE requisitos_programa (
  id_requisito_programa INTEGER PRIMARY KEY AUTOINCREMENT,
  id_programa_educativo INTEGER NOT NULL,
  descripcion TEXT NOT NULL,
  FOREIGN KEY (id_programa_educativo) REFERENCES programa_educativo(id_programa_educativo)
);

CREATE TABLE Citas (
  id_cita INTEGER PRIMARY KEY AUTOINCREMENT,
  fecha DATE NOT NULL,
  nombre TEXT NOT NULL,
  observaciones TEXT NOT NULL,
  estado_cita TEXT CHECK (estado_cita IN ('integrada', 'pendiente', 'cancelada')) NOT NULL,
  id_usuario INTEGER NOT NULL,
  num_Cuenta INTEGER NOT NULL,
  FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
  UNIQUE (num_Cuenta, fecha)
);

CREATE TABLE reportes_citas (
  id_reporte INTEGER PRIMARY KEY AUTOINCREMENT,
  fecha DATE NOT NULL,
  citas_totales INTEGER NOT NULL,
  citas_completas INTEGER NOT NULL,
  citas_pendientes INTEGER NOT NULL,
  citas_canceladas INTEGER NOT NULL,
  observaciones TEXT,
  UNIQUE (fecha)
);

-- Tabla Datos Estudiantes Personales
CREATE TABLE datos_estudiantes_personales (
  nombre_estudiante TEXT NOT NULL,
  ap_paterno TEXT NOT NULL,
  ap_materno TEXT NOT NULL,
  genero TEXT NOT NULL,
  curp TEXT NOT NULL UNIQUE,
  estado TEXT NOT NULL,
  correo TEXT NOT NULL,
  num_Cuenta INTEGER NOT NULL,
  PRIMARY KEY (num_Cuenta),
  FOREIGN KEY (num_Cuenta) REFERENCES datos_estudiantes_uni(num_Cuenta)
);

-- Tabla Datos Estudiantes Bachillerato
CREATE TABLE datos_estudiantes_bach (
  fecha_inicio_bach DATE NOT NULL,
  fecha_fin_bach DATE NOT NULL,
  id_bach INTEGER NOT NULL,
  num_Cuenta INTEGER NOT NULL,
  PRIMARY KEY (id_bach, num_Cuenta),
  FOREIGN KEY (id_bach) REFERENCES bachillerato(id_bach),
  FOREIGN KEY (num_Cuenta) REFERENCES datos_estudiantes_uni(num_Cuenta),
  CHECK (fecha_inicio_bach &lt;= fecha_fin_bach)
);

CREATE TABLE datos_estudiantes_uni (
  num_Cuenta INTEGER NOT NULL,
  fecha_inicio_uni DATE NOT NULL,
  fecha_fin_uni DATE NOT NULL,
  periodo_pasantia TEXT NOT NULL,
  id_modalidad INTEGER NOT NULL,
  id_programa_educativo INTEGER NOT NULL,
  PRIMARY KEY (num_Cuenta),
  FOREIGN KEY (id_modalidad) REFERENCES modalidad_titulacion(id_modalidad),
  FOREIGN KEY (id_programa_educativo) REFERENCES programa_educativo(id_programa_educativo),
  CHECK (fecha_inicio_uni &lt;= fecha_fin_uni)
);

CREATE TABLE bitacora (
  id_bitacora INTEGER PRIMARY KEY AUTOINCREMENT,
  id_cita INTEGER NOT NULL,
  fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  hora TIME NOT NULL,
  encargado TEXT NOT NULL,
  descripcion TEXT NOT NULL,
  FOREIGN KEY (id_cita) REFERENCES Citas(id_cita)
);

-- Índices optimizados
CREATE INDEX idx_num_Cuenta ON datos_estudiantes_uni(num_Cuenta);
CREATE INDEX idx_id_modalidad ON datos_estudiantes_uni(id_modalidad);
CREATE INDEX idx_id_programa ON datos_estudiantes_uni(id_programa_educativo);
CREATE INDEX idx_id_bach ON datos_estudiantes_bach(id_bach);
</sql><current_tab id="0"/></tab_sql></sqlb_project>
